name: vhd

services:

  one:
    image: ursu/vhdapi:latest
    build:
      context: .
      dockerfile: VHD.Api/Dockerfile
    ports:
      - "6061:8080"
    env_file:
      - .env
    environment:
      ServiceOptions__ServiceName: "One"
    depends_on:
      - postgres
    restart: on-failure

  two:
    image: ursu/vhdapi:latest
    build:
      context: .
      dockerfile: VHD.Api/Dockerfile
    ports:
      - "6062:8080"
    env_file:
      - .env
    environment:
      ServiceOptions__ServiceName: "Two"
    depends_on:
      - postgres
    restart: on-failure
  
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the Collector
      - "8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
  
  aspire:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:8.0.0
    environment:
      DOTNET_DASHBOARD_UNSECURED_ALLOW_ANONYMOUS: true
    ports:
      - "18888:18888" # UI
      - "18889:18889" # gRPC
  
  jaeger:
    image: jaegertracing/all-in-one:1.62.0
    ports:
      - "4317" # Jaeger gRPC
      - "16686:16686" # UI
      - "14250:14250" # Jaeger gRPC
      - "8889" # Prometheus metrics
    environment:
      COLLECTOR_OTLP_ENABLED: "true"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml

  postgres:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
